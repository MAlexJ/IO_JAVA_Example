*** Потоки ввода-вывода  ***

В программах нa java создаются потоки ввода-вывода. Потак ввода-вывода - это
абстракция, которая поставляет или потребляет информацию. Поток ввода-вывода
связан с физическим устройством через систему ввода-вывода в Java. Все потоки
ввода-вывода ведут себя одинаково, несмотря на отличия в конкретных физических
устройствах, с которыми они связаны. Таким образом, 0дни и те же классы,
методы ввода-вывода применимы к разнотипным устройствам. Это озпачает, что
абстракция потока ввода может охватывать разные типы ввода: из файла на диске,
клавиатуры или сетевого соединения. Аналогично поток вывода может обращаться
к консоли, файлу на диске или сетевому соединению. Потоки ввода-вывода
представляют ясный способ организации ввода-вывода, и3бадяют от необходимости раз­
бираться в отличиях, например, клавиатуры от сети. В Java потоки ввода-вывода
реализуются в пределах иерархии классов, определенных в пакете java.io

На заметку!
Помимо потокового ввода-вывода, определенного в пакете java.io, в Java
предоставляется также буферный и канальный ввод-вывод, определенный в пакете java.nio
и его подчиненных пакетах.


******   Потоки ввода-вывода байтов и символов  ***
B Java определяются два вида потоков ввода-вывода: байтов и символов. Потоки
ввода-вывода байтов предоставляют удобные средства для управления вводом и
выводом отдельных байтов. Эти потоки используются, например, при чтении и за­
писи двоичных данных. Потоки ввода-вывода символов предоставляют удобные
средства управления вводом и выводом отдельных символов. С этой целью в них
применястся кодировка в Юникоде, допускающая итернациализацию. Кроме
того, потоки ввода-вывода символов оказываються порой более эффективными,
чем потоки ввода-вывода байтов.
В первоначальной версии jаvа 1.0 потоки ввода-вывода символов отсутствовали,
и поэтому весь ввод-вывод имел байтовую организацию. Потоки ввода-вывода
символов были внедрены в версии JAVA 1.1, сделав не рекомендованным к упо­
треблению некоторые классы и методы, потдержтвавшие ввод-вывод с байтовой
организацией. Устаревший код, в котором не применяются потоки ввода-вывода
байтов, встречается все реже, но и ногда он все еще применяеться. Как правило,
устаревший код приходится обновлять, если это возможно, чтобы воспользовать­
ся преимуществами потоков ввода-вывода символов.
Следует также иметь в виду, что на самом нижнем уровне весь ввод-вывод по­
прежнему имеет байтовую организацию. А потоки ввода-вывода символов лишь
предоставляют удобные и эффективные средства для обращения с символами.
